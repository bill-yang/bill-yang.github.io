name: Transfer Bitbucket Pipeline to Github Actions (bitbucket-to-github.yml)
on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  check-target:
    runs-on: ubuntu-latest
    name: use terraform to get target group status (blue or green)
    outputs:
      test_target_group: ${{ steps.step1.outputs.test_target_group }}
      live_target_group: ${{ steps.step1.outputs.live_target_group }}
    steps:
      - name: git clone github repository
        id: step1
        run: |
          export AWS_ACCESS_KEY=${{ secrets.AWS_ACCESS_KEY }}
          export AWS_SECRET_KEY=${{ secrets.AWS_SECRET_KEY }}
          export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY }}
          export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_KEY }}
          export AWS_DEFAULT_REGION=us-west-2
          echo "Check Target/Live AMI status"
          echo "GITHUB_WORKSPACE: ${GITHUB_WORKSPACE}"
          echo "Current path: $(pwd)"
          git clone https://github.com/bill-yang/bill-yang.github.io.git
          ls -la "${GITHUB_WORKSPACE}"
          cd bill-yang.github.io
          ls -la
          default_listener_blue_count=`terraform state show module.production-alb.aws_alb_listener.payment_microservice_alb_listener | grep -c 'prod-alb-payment-blue-tg-3000'` && echo 'OK!';
          if test $default_listener_blue_count -eq 0; then live_target='green'; else live_target='blue'; fi
          if test $live_target == 'blue'; then test_target='green'; else test_target='blue'; fi
          echo "::set-output name=test_target_group::$test_target"
          echo "::set-output name=live_target_group::$live_target"
  build:
    runs-on: ubuntu-latest
    name: Packer Build new AMI
    needs: [check-target]
    steps:
     - run: |
        echo "Test target: ${{needs.check-target.outputs.test_target_group}}"
        echo "Live target: ${{needs.check-target.outputs.live_target_group}}"
        echo "Current path: $(pwd)"
        ls -la

  build-with-docker:
    runs-on: ubuntu-latest    
    name: Packer Build new AMI with Docker
    steps:
    - name: check out
      uses: actions/checkout@v2
    - name: set env
      run: |
        export MY_FULL_NAME="Bill Yang" # not work
    - name: build with docker file
      id: step1
      uses: ./actions/ap-build
      env:
        MY_NAME: "Bill Yang"
        MY_AWS_ACCESS: ${{ secrets.MY_AWS_ACCESS }}
        MY_AWS_SECRET: ${{ secrets.MY_AWS_SECRET }}
        ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
    - name: show result
      run: |
        echo "Run time: ${{ steps.step1.outputs.time }}"
        echo "live_target_group: ${{ steps.step1.outputs.live_target_group }}"
        echo "test_var_output: ${{ steps.step1.outputs.test_var_output }}"
        
        echo "test_var_env: ${{ env.test_var_env }}"